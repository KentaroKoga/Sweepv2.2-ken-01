/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
   time-to-max-speed-ms = <680>;
   acceleration-exponent=<2>;
};
/ { 


    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q  &kp W        &kp E       &kp R         &kp T 						       &kp Y              &kp U       &kp I          &kp O        &kp P 
		&kp A  &hm LCTRL S  &hm LALT D  &hm LGUI F    &kp G 			             &kp H              &hm RGUI J  &hm RALT K     &hm RCTRL L  &td SINGLE_QUOTE DOUBLE_QUOTES
		&kp Z  &kp X        &kp C       &kp V         &kp B				             &kp N              &kp M       &td COMMA DOT  &kp SLASH    &td LESS_THAN GREATER_THAN
          				                  &mt LGUI SPC  &mt LEFT_ALT BKSP        &mt RSHIFT ENTER   &to 1
		>;
		};

       		first_layer {
		bindings = <
		&kp ESC   &kp EXCL   &kp AT     &kp HASH   &kp DLLR		              &kp STAR          &kp PRCNT  &kp LBKT  &kp RBKT  &kp BKSP
		&kp TAB   &kp QMARK  &kp CARET  &kp GRAVE  &kp AMPS 		            &kp MINUS         &kp PLUS   &kp LPAR  &kp RPAR  &trans
		&kp CAPS  &kp APOS   &kp BSLH   &kp PIPE   &kp TILDE 		            &kp UNDER         &kp EQUAL  &kp LBRC  &kp RBRC  &to 3
					    								      &to 0      &mt LEFT_ALT BKSP        &mt RSHIFT ENTER  &to 2
		>;
		};
		
       		second_layer {
		bindings = <
		&trans  &trans  &kp LG(LS(N3))  &kp LG(LS(N4))  &kp LG(LS(N5))    			 &kp N7            &kp N8  &kp N9  &kp N0     &kp BKSP
		&trans  &trans  &kp PG_UP       &kp UP          &kp PG_DN 			         &kp N4            &kp N5  &kp N6  &kp STAR   &kp SLASH
		&trans  &trans  &kp LEFT        &kp DOWN        &kp RIGHT    			       &kp N1            &kp N2  &kp N3  &kp MINUS  &kp PLUS
					                          &to 0           &mt LEFT_ALT BKSP        &mt RSHIFT ENTER  &to 3
		>;
		};

		   		third_layer {
		bindings = <
		&trans  &kp F9  &kp F10  &kp F11  &kp F12    			         &kp C_MUTE      &kp C_BRI_AUTO  &trans  &trans  &trans
		&trans  &kp F5  &kp F6   &kp F7   &kp F8 			             &kp C_VOL_UP    &kp C_BRI_UP    &trans  &trans  &trans
		&trans  &kp F1  &kp F2   &kp F3   &kp F4 			             &kp C_VOL_DOWN  &kp C_BRI_DN    &trans  &trans  &trans
					                   &to 0    &mt LEFT_ALT BKSP        &mt RSHIFT ENTER  &trans
		>;
		};
		
		
        
	};
};