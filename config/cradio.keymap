/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};


/ {
    combos {
      compatible = "zmk,combos";
			combo_ESC {
				timeout-ms = <50>;
				key-positions = <0 1>;
				bindings = <&kp ESC>;
			};
			combo_BSPC {
				timeout-ms = <50>;
				key-positions = <2 3>;
				bindings = <&kp BSPC>;
			};
			combo_ENTER {
				timeout-ms = <50>;
				key-positions = <12 13>;
				bindings = <&kp ENTER>;
			};
			combo_COPY {
				timeout-ms = <50>;
				key-positions = <11 12>;
				bindings = <&kp LG(C)>;
			};
			combo_PASTE {
				timeout-ms = <50>;
				key-positions = <1 2>;
				bindings = <&kp LG(V)>;
			};
			combo_SAVE {
				timeout-ms = <50>;
				key-positions = <10 11>;
				bindings = <&kp LG(S)>;
			};
			combo_UNDO {
				timeout-ms = <50>;
				key-positions = <13 14>;
				bindings = <&kp LG(Z)>;
			};
			combo_REDO {
				timeout-ms = <50>;
				key-positions = <3 4>;
				bindings = <&kp LG(LS(Z))>;
			};
			combo_CONT {
				timeout-ms = <50>;
				key-positions = <1 2 3>;
				bindings = <&to 4>;
			};
			combo_WARPX {
				timeout-ms = <50>;
				key-positions = <11 12 13>;
				bindings = <&kp LALT(LG(X))>;
			};
    };

    behaviors {
			hm: homerow_mods {
				compatible = "zmk,behavior-hold-tap";
				label = "HOMEROW_MODS";
				#binding-cells = <2>;
				tapping-term-ms = <200>;
				quick_tap_ms = <0>;
				flavor = "tap-preferred";
				bindings = <&kp>, <&kp>;
			};
			td: tapdance {
				compatible = "zmk,behavior-hold-tap";
				label = "TAPDANCE";
				#binding-cells = <2>;
				tapping-term-ms = <150>;
				quick_tap_ms = <0>;
				flavor = "tap-preferred";
				bindings = <&kp>, <&kp>;
      };
    };

  keymap {
      compatible = "zmk,keymap";
                
			alphabet_layer {
				bindings = <
				&td COMMA DOT  &mt FSLH SEMI  &td LT GT     &kp P           &kp Y					 &kp F              &kp G       &kp C          &kp R        &kp L 
				&kp A          &kp O          &hm LALT E    &hm LCTRL U     &hm LSHIFT I 			 &hm RSHIFT D       &hm RGUI H  &hm RALT T     &hm RCTRL N  &kp S
				&td SQT DQT    &kp Q          &kp J         &kp K           &kp X				     &kp B              &kp M       &kp W          &kp V        &kp Z        
                                                            &mt LGUI SPACE  &to 1                 	 &mt RSHIFT ENTER   &mt RALT BSPC
				>;
				};

			code_layer {
				bindings = <
				&kp ESC   &kp EXCL   &kp AT     &kp HASH   &kp DLLR		              &kp STAR          &kp PRCNT  &kp LBKT  &kp RBKT  &kp BSPC
				&kp TAB   &kp QMARK  &kp CARET  &kp GRAVE  &kp AMPS 		          &kp MINUS         &kp PLUS   &kp LPAR  &kp RPAR  &to 3
				&kp CAPS  &kp APOS   &kp BSLH   &kp PIPE   &kp TILDE 		          &kp UNDER         &kp EQUAL  &kp LBRC  &kp RBRC  &to 4
												&to 0      &to 2                      &mt RSHIFT ENTER  &mt RALT BSPC
				>;
				};
		
			number_layer {
				bindings = <
				&kp LG(Z)   &kp LG(LS(Z))       &kp LG(LS(N3))  &kp LG(LS(N4))  &kp LG(LS(N5))    &kp N7  &kp N8  &kp N9  &kp N0     &kp DOT
				&kp LG(C)   &mt LGUI SPACE      &kp PG_UP       &kp UP          &kp PG_DN 		  &kp N4  &kp N5  &kp N6  &kp STAR   &kp SLASH
				&kp LG(V)    &mt LSHIFT ENTER    &kp LEFT        &kp DOWN        &kp RIGHT    	  &kp N1  &kp N2  &kp N3  &kp MINUS  &kp PLUS
													&to 0           &to 3        	&mt RSHIFT ENTER  &mt RALT BSPC
				>;
				};

			device_layer {
				bindings = <
				&trans  &kp F9  &kp F10     &kp F11  &kp F12    			     &kp C_MUTE        &kp C_BRI_AUTO  &trans  &trans  &trans
				&trans  &kp F5  &kp F6      &kp F7   &kp F8 			         &kp C_VOL_UP      &kp C_BRI_UP    &trans  &trans  &trans
				&trans  &kp F1  &kp F2      &kp F3   &kp F4 			         &kp C_VOL_DN      &kp C_BRI_DN    &trans  &trans  &trans
											&to 0    &to 4         		     &mt RSHIFT ENTER  &mt RALT BSPC
				>;
				};

			control_layer {
				bindings = <
				&trans   &kp G      &trans      &trans			&trans				&trans			&kp U	&kp I		&trans		&to 5
				&trans   &kp X      &kp LGUI    &kp LALT        &kp H 				&kp H			&kp J	&kp K		&kp L		&trans
				&trans   &kp C      &trans      &trans          &trans    	  		&trans			&kp M	&kp COMMA  	&kp PERIOD	&kp V
									&to 0		&trans        	&mt RSHIFT ENTER	&mt RALT BSPC
				>;
				};

			qwerty_layer {
				bindings = <
				&kp Q  &kp W        &kp E       &kp R           &kp T					 &kp Y              &kp U       &kp I          &kp O        &kp P 
				&kp A  &kp S        &hm LALT D  &hm LCTRL F     &hm LSHIFT G 			 &hm RSHIFT H       &hm RGUI J  &hm RALT K     &hm RCTRL L  &mt FSLH SEMI
				&kp Z  &kp X        &kp C       &kp V           &kp B				     &kp N              &kp M       &td COMMA DOT  &td SQT DQT  &td LT GT
												&mt LGUI SPACE  &to 0                    &mt RSHIFT ENTER   &mt RALT BSPC
				>;
				};
		};
};
